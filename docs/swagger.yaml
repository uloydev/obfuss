basePath: /api
definitions:
  entities.Todo:
    properties:
      action:
        description: Action is the todo action
        type: string
      createdAt:
        description: Automatically managed by GORM for creation time
        type: string
      id:
        description: Standard field for the primary key
        type: integer
      updatedAt:
        description: Automatically managed by GORM for update time
        type: string
    type: object
  models.BaseResponse-array_entities_Todo:
    properties:
      data:
        items:
          $ref: '#/definitions/entities.Todo'
        type: array
      errors:
        items: {}
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/models.PaginationMeta'
    type: object
  models.BaseResponse-entities_Todo:
    properties:
      data:
        $ref: '#/definitions/entities.Todo'
      errors:
        items: {}
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/models.PaginationMeta'
    type: object
  models.BaseResponse-models_GetAllAbsenResponse:
    properties:
      data:
        $ref: '#/definitions/models.GetAllAbsenResponse'
      errors:
        items: {}
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/models.PaginationMeta'
    type: object
  models.GetAllAbsenResponse:
    properties:
      day_number:
        type: integer
      hari:
        type: string
      id:
        type: integer
      id_kelas:
        type: integer
      id_mk:
        type: integer
      id_pertemuan:
        type: integer
      id_semester:
        type: integer
      inisial_kelas:
        type: string
      jam_mulai:
        type: string
      jam_selesai:
        type: string
      jumlah_hadir:
        type: integer
      jumlah_pertemuan:
        type: integer
      kode_kurikulum:
        type: string
      nama_dosen:
        type: string
      nama_kelas:
        type: string
      nama_konsentrasi:
        type: string
      nama_lengkap:
        type: string
      nama_mk:
        type: string
      nama_prodi:
        type: string
      semester:
        type: string
      tahun:
        type: string
    type: object
  models.PaginationMeta:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
      totalPage:
        type: integer
    type: object
  models.TodoRequest:
    properties:
      action:
        type: string
    required:
    - action
    type: object
host: localhost:6996
info:
  contact: {}
  description: Obfuss API Documentation
  title: Obfuss API
  version: "1"
paths:
  /absen/mahasiswa:
    get:
      consumes:
      - application/json
      description: Get Absen Mahasiswa
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - description: User type
        in: query
        name: userType
        required: true
        type: string
      - description: Semester ID
        in: query
        name: smtId
        required: true
        type: integer
      - description: Kelas ID
        in: query
        name: kelasId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse-models_GetAllAbsenResponse'
      summary: Get Absen Mahasiswa
      tags:
      - Absen
  /todo:
    get:
      consumes:
      - application/json
      description: Get Todos
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse-array_entities_Todo'
      summary: Get Todos
      tags:
      - Todo
    post:
      consumes:
      - application/json
      description: Create Todo
      parameters:
      - description: Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse-entities_Todo'
      summary: Create Todo
      tags:
      - Todo
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse-entities_Todo'
      summary: Delete Todo
      tags:
      - Todo
    get:
      consumes:
      - application/json
      description: Get Todo By ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse-entities_Todo'
      summary: Get Todo By ID
      tags:
      - Todo
    put:
      consumes:
      - application/json
      description: Update Todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse-entities_Todo'
      summary: Update Todo
      tags:
      - Todo
swagger: "2.0"
